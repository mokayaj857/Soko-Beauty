name: soko_beauty
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ">=3.1.5 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  cupertino_icons: ^1.0.2
  provider: ^6.1.1
  flutter_signin_button: ^2.0.0
  http: ^1.2.0
  video_player: ^2.8.2
  marquee: ^2.2.3
  # post dependencies
  flutter_bloc: ^8.1.3 # Implements the BLoC pattern for state management
  equatable: ^2.0.5 # Simplifies equality comparisons for objects
  permission_handler: ^11.3.1 # Manages permissions for camera and microphone
  visibility_detector: ^0.4.0+2 # Detects visibility changes of widgets
  camera: ^0.10.5+9

  # path_provider: ^2.1.2
  # path: ^1.8.3
  # firebase_auth: ^4.17.4
  # firebase_core: ^2.25.4
  flutter_svg: 2.0.10+1
  carousel_slider: ^4.2.1
  email_validator: ^2.1.17
  cloud_firestore: ^4.15.8
  firebase_auth: ^4.17.8
  dartz: ^0.10.1
  smooth_page_indicator: ^1.1.0
  image_picker: ^1.0.7
  firebase_storage: ^11.6.9
  intl: ^0.19.0
  file_picker: ^8.0.0+1
  open_file: ^3.3.2
  bottom_sheet_scaffold: ^0.1.9
  gallery_picker: ^0.5.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^3.0.1 # Enforces Flutter lint rules for code quality
  bloc_test: ^9.1.4 # Provides testing utilities for BLoC testing
  mocktail: # Provides mock objects for unit testing

flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  windows: "launcher_icon"
  image_path: "assets/launcher_icon.png"

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/logo.png
    - assets/1015-300x201.jpg
    - assets/icons/ios.png
    - assets/icons/ios-white.png
    - assets/icons/facebook.png
    - assets/icons/google.png
    - assets/gif/shop.gif
    - assets/gif/beauty_video.gif
    - assets/gif/make_up.gif
    - assets/gif/nothing.gif

  #  - assets/gif/loading.gif
  #  - assets/map.jpg
  #  - assets/map_dark.jpg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
